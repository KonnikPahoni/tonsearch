# Generated by Django 4.2.8 on 2024-02-11 17:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("tonnftscan", "0025_remove_collectionsearch_collection_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="DailyIndicator",
            fields=[
                ("date", models.DateField(primary_key=True, serialize=False)),
                ("collections_count", models.IntegerField()),
                ("collection_nfts_count", models.IntegerField()),
                ("nft_holders_count", models.IntegerField()),
                ("nfts_on_sale_count", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="CollectionIndicators",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "google_impressions_total",
                    models.IntegerField(default=0, help_text="Number of impressions in Google"),
                ),
                (
                    "google_impressions_last_30_days",
                    models.IntegerField(default=0, help_text="Number of impressions in Google for the last 30 days"),
                ),
                ("google_clicks_total", models.IntegerField(default=0, help_text="Number of clicks in Google")),
                (
                    "google_clicks_last_30_days",
                    models.IntegerField(default=0, help_text="Number of clicks in Google for the last 30 days"),
                ),
                (
                    "google_clicks_last_7_days",
                    models.IntegerField(default=0, help_text="Number of clicks in Google for the last 7 days"),
                ),
                ("google_ctr_total", models.FloatField(default=0, help_text="CTR in Google")),
                (
                    "google_ctr_last_30_days",
                    models.FloatField(default=0, help_text="CTR in Google for the last 30 days"),
                ),
                ("google_position_total", models.FloatField(default=0, help_text="Position in Google")),
                (
                    "google_position_last_30_days",
                    models.FloatField(default=0, help_text="Position in Google for the last 30 days"),
                ),
                ("spam_ratio", models.FloatField(default=0, help_text="Spam ratio")),
                (
                    "collection",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collection_search",
                        to="tonnftscan.collection",
                    ),
                ),
            ],
        ),
    ]
